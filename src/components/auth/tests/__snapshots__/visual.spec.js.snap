// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Visual should render the component 1`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits={undefined}
  accessible={true}
  collapsable={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "opacity": 1,
    }
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <Image
    collapsable={undefined}
    source={1}
    style={
      Object {
        "height": 1334,
        "opacity": 1,
        "transform": Array [
          Object {
            "translateY": 100,
          },
        ],
        "width": 750,
      }
    }
  >
    <View
      collapsable={undefined}
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "flex-end",
          "marginBottom": 50,
          "opacity": 100,
        }
      }
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "transparent",
            "opacity": 1,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={false}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#FFF",
                "fontFamily": "Circular-Std-Medium",
              },
              Object {
                "fontSize": 35,
                "marginBottom": 15,
              },
            ]
          }
        >
          Register
        </Text>
      </View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "transparent",
            "opacity": 1,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={false}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#FFF",
                "fontFamily": "Circular-Std-Medium",
              },
              Object {
                "fontSize": 17,
              },
            ]
          }
        >
          Login
        </Text>
      </View>
    </View>
  </Image>
</View>
`;

exports[`Visual should render the component on step 1 1`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits={undefined}
  accessible={true}
  collapsable={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "opacity": 1,
    }
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <Image
    collapsable={undefined}
    source={1}
    style={
      Object {
        "height": 1334,
        "opacity": 1,
        "transform": Array [
          Object {
            "translateY": 100,
          },
        ],
        "width": 750,
      }
    }
  />
  <View
    collapsable={undefined}
    style={
      Object {
        "backgroundColor": "#000",
        "height": 1334,
        "left": 0,
        "opacity": 100,
        "position": "absolute",
        "top": 0,
        "width": 750,
      }
    }
  />
</View>
`;
